# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches:
      - 'main'
    tags:
      - 'v*'
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x, 17.x]
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm ci
    - run: npm run build --if-present
  
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js 16.x
        uses: actions/setup-node@v2
        with:
          node-version: 16.x
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build App
        run: npm run build

      - name: Run unit tests
        run: npm run test:cov

      - name: Run e2e tests
        run: npm run test:e2e

      - name: Publish unit test results
        uses: tanmen/jest-reporter@v1
        if: always()
        with:
          action-name: Unit Test Report
          github-token: ${{ secrets.GITHUB_TOKEN }}
          result-file: ./test/result.json

      - name: Publish e2e test results
        uses: tanmen/jest-reporter@v1
        if: always()
        with:
          action-name: E2E Test Report
          github-token: ${{ secrets.GITHUB_TOKEN }}
          result-file: ./test/result-e2e.json

      - name: Publish code coverage
        uses: romeovs/lcov-reporter-action@v0.2.16
        if: always()
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          lcov-file: ./coverage/lcov.info

      - name: Run Snyk
        uses: snyk/actions@0.3.0
        if: always()
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

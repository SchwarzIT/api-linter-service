// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`[Feature] Lintings - /api-linting/api/v1/lintings POST successfully creates a new linting: lintingResultSwaggerFile 1`] = `
Object {
  "description": "Given API Spec DOES comply with company API rules.",
  "isValidSpec": true,
  "linkApiRules": "https://onedirection.schwarz/architecture-best-practices/apis/",
  "lintingResults": Array [
    Object {
      "code": "description-is-mandatory",
      "message": "Every route of an API should have a description; property: /digital-twin/api/v1/products.description is missing",
      "path": Array [
        "paths",
        "/digital-twin/api/v1/products",
      ],
      "range": Object {
        "end": Object {
          "character": 1243,
          "line": 0,
        },
        "start": Object {
          "character": 60,
          "line": 0,
        },
      },
      "severity": 1,
    },
    Object {
      "code": "http-verbs-should-be-used",
      "message": "HTTP verbs should be used to express different actions or functions on a resource; The HTTP verb /digital-twin/api/v1/products.put is missing.",
      "path": Array [
        "paths",
        "/digital-twin/api/v1/products",
      ],
      "range": Object {
        "end": Object {
          "character": 1243,
          "line": 0,
        },
        "start": Object {
          "character": 60,
          "line": 0,
        },
      },
      "severity": 1,
    },
    Object {
      "code": "path-description",
      "message": "Each path of an API must have a description; property \`description\` is missing for path #/paths/~1digital-twin~1api~1v1~1products",
      "path": Array [
        "paths",
        "/digital-twin/api/v1/products",
      ],
      "range": Object {
        "end": Object {
          "character": 1243,
          "line": 0,
        },
        "start": Object {
          "character": 60,
          "line": 0,
        },
      },
      "severity": 1,
    },
    Object {
      "code": "description-is-mandatory",
      "message": "Every route of an API should have a description; property: /digital-twin/api/v1/products/{ean}.description is missing",
      "path": Array [
        "paths",
        "/digital-twin/api/v1/products/{ean}",
      ],
      "range": Object {
        "end": Object {
          "character": 3155,
          "line": 0,
        },
        "start": Object {
          "character": 1286,
          "line": 0,
        },
      },
      "severity": 1,
    },
    Object {
      "code": "http-verbs-should-be-used",
      "message": "HTTP verbs should be used to express different actions or functions on a resource; The HTTP verb /digital-twin/api/v1/products/{ean}.post is missing.",
      "path": Array [
        "paths",
        "/digital-twin/api/v1/products/{ean}",
      ],
      "range": Object {
        "end": Object {
          "character": 3155,
          "line": 0,
        },
        "start": Object {
          "character": 1286,
          "line": 0,
        },
      },
      "severity": 1,
    },
    Object {
      "code": "path-description",
      "message": "Each path of an API must have a description; property \`description\` is missing for path #/paths/~1digital-twin~1api~1v1~1products~1{ean}",
      "path": Array [
        "paths",
        "/digital-twin/api/v1/products/{ean}",
      ],
      "range": Object {
        "end": Object {
          "character": 3155,
          "line": 0,
        },
        "start": Object {
          "character": 1286,
          "line": 0,
        },
      },
      "severity": 1,
    },
    Object {
      "code": "info-description",
      "message": "OpenAPI object info \`description\` must be present and at least 100 chars long.",
      "path": Array [
        "info",
        "description",
      ],
      "range": Object {
        "end": Object {
          "character": 3244,
          "line": 0,
        },
        "start": Object {
          "character": 3210,
          "line": 0,
        },
      },
      "severity": 1,
    },
    Object {
      "code": "contact-information",
      "message": "Every API must have a contact containing name, email and a url; property contact.name is missing",
      "path": Array [
        "info",
        "contact",
      ],
      "range": Object {
        "end": Object {
          "character": 3273,
          "line": 0,
        },
        "start": Object {
          "character": 3271,
          "line": 0,
        },
      },
      "severity": 1,
    },
  ],
}
`;

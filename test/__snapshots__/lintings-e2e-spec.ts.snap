// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`[Feature] Lintings - /api-linting/api/v1/lintings POST successfully creates a new linting: lintingResultSwaggerFile 1`] = `
Object {
  "description": "Given API Spec DOES comply with company API rules.",
  "highestSeverityLevel": "Warn",
  "isValidSpec": true,
  "linkApiRules": "https://onedirection.schwarz/architecture-best-practices/apis/",
  "lintingResults": Array [
    Object {
      "code": "info-description",
      "message": "OpenAPI object info \`description\` must be present and at least 100 chars long.",
      "path": Array [
        "info",
        "description",
      ],
      "range": Object {
        "end": Object {
          "character": 3244,
          "line": 0,
        },
        "start": Object {
          "character": 3210,
          "line": 0,
        },
      },
      "severity": 1,
    },
    Object {
      "code": "contact-information",
      "message": "Every API must have a contact containing name, email and a url; property contact.name is missing",
      "path": Array [
        "info",
        "contact",
      ],
      "range": Object {
        "end": Object {
          "character": 3273,
          "line": 0,
        },
        "start": Object {
          "character": 3271,
          "line": 0,
        },
      },
      "severity": 1,
    },
    Object {
      "code": "contact-information",
      "message": "Every API must have a contact containing name, email and a url; property contact.email is missing",
      "path": Array [
        "info",
        "contact",
      ],
      "range": Object {
        "end": Object {
          "character": 3273,
          "line": 0,
        },
        "start": Object {
          "character": 3271,
          "line": 0,
        },
      },
      "severity": 1,
    },
    Object {
      "code": "contact-information",
      "message": "Every API must have a contact containing name, email and a url; property contact.url is missing",
      "path": Array [
        "info",
        "contact",
      ],
      "range": Object {
        "end": Object {
          "character": 3273,
          "line": 0,
        },
        "start": Object {
          "character": 3271,
          "line": 0,
        },
      },
      "severity": 1,
    },
    Object {
      "code": "must-define-example-schema",
      "message": "Every DTO must define at least one example; DTO is lacking an example #/components/schemas/CreateProductDto",
      "path": Array [
        "components",
        "schemas",
        "CreateProductDto",
      ],
      "range": Object {
        "end": Object {
          "character": 3956,
          "line": 0,
        },
        "start": Object {
          "character": 3494,
          "line": 0,
        },
      },
      "severity": 1,
    },
    Object {
      "code": "must-define-example-schema",
      "message": "Every DTO must define at least one example; DTO is lacking an example #/components/schemas/CreatedProductDto",
      "path": Array [
        "components",
        "schemas",
        "CreatedProductDto",
      ],
      "range": Object {
        "end": Object {
          "character": 4556,
          "line": 0,
        },
        "start": Object {
          "character": 3979,
          "line": 0,
        },
      },
      "severity": 1,
    },
    Object {
      "code": "must-define-example-schema",
      "message": "Every DTO must define at least one example; DTO is lacking an example #/components/schemas/UpdateProductDto",
      "path": Array [
        "components",
        "schemas",
        "UpdateProductDto",
      ],
      "range": Object {
        "end": Object {
          "character": 4991,
          "line": 0,
        },
        "start": Object {
          "character": 4578,
          "line": 0,
        },
      },
      "severity": 1,
    },
  ],
}
`;
